version: "3.3"
services:
  caddy:
    image: "caddy:{{ controlplane_versions.docker.caddy }}"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /opt/packetframe/docker/caddy/data/:/data
      - /opt/packetframe/docker/caddy/public/:/etc/caddy/public/
      - /opt/packetframe/docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /opt/packetframe/docker/caddy/log.txt:/var/log/caddy.log

  api:
    image: "ghcr.io/packetframe/api:{{ controlplane_versions.docker.api }}"
    restart: unless-stopped
    ports:
      - 127.0.0.1:8080:8080
    depends_on:
      - api_db
    environment:
      - DB_HOST=api_db
      - METRICS_LISTEN=:8081
      - RPC_SERVER=http://orchestrator:8080
      - SMTP_HOST={{ config.email.host }}
      - SMTP_USER={{ config.email.username }}
      - SMTP_PASS={{ config.email.password }}

  orchestrator:
    image: "ghcr.io/packetframe/orchestrator:{{ controlplane_versions.docker.api }}"
    restart: unless-stopped
    volumes:
      - /opt/packetframe/docker/orchestrator_cache/:/data
      - /root/.ssh/packetframe:/ssh-key
      - /opt/packetframe/docker/nodes.yml:/nodes.yml
    depends_on:
      - api_db
    environment:
      - DB_HOST=api_db
      - CACHE_DIR=/data
      - METRICS_LISTEN=:8081
      - RPC_LISTEN=:8080
      - SSH_KEY_FILE=/ssh-key
      - SSH_PORT={{ config.edge.ssh.port }}
      - NODE_FILE=/nodes.yml
      - NS1_HOSTNAME=ns1v4
      - NS2_HOSTNAME=ns2v4

  api_db:
    image: "postgres:{{ controlplane_versions.docker.postgres }}"
    restart: unless-stopped
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - /opt/packetframe/docker/api_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api

  bifocal:
    image: "ghcr.io/natesales/bifocal:{{ controlplane_versions.docker.bifocal }}"
    restart: unless-stopped
    environment:
      BIFOCAL_SSH_USERNAME: "{{ config.ring.username }}"
      BIFOCAL_SSH_KEY: |
        {{ config.ring.key | indent(width=8) }}
      BIFOCAL_SMTP_HOST: "{{ config.email.host }}"
      BIFOCAL_SMTP_PORT: "{{ config.email.port }}"
      BIFOCAL_SMTP_USERNAME: "{{ config.email.username }}"
      BIFOCAL_SMTP_PASSWORD: "{{ config.email.password }}"
      BIFOCAL_EMAIL_RECIPIENT: "{{ config.email.recipient }}"
      BIFOCAL_INTERVAL: 5m
      BIFOCAL_SCRIPT: https://raw.githubusercontent.com/packetframe/infra/main/roles/controlplane/bifocal-check.sh

  prometheus:
    image: "prom/prometheus:v{{ controlplane_versions.docker.prometheus }}"
    restart: unless-stopped
    user: root
    ports:
      - 127.0.0.1:9090:9090
    volumes:
      - /opt/packetframe/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /opt/packetframe/docker/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: "grafana/grafana:{{ controlplane_versions.docker.grafana }}"
    restart: unless-stopped
    user: root
    container_name: grafana
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - /opt/packetframe/docker/grafana/data:/var/lib/grafana
