version: "3.3"
services:
  caddy:
    image: "caddy:{{ config.controlplane.versions.docker.caddy }}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /opt/packetframe/docker/caddy/data/:/data
      - /opt/packetframe/docker/caddy/public/:/etc/caddy/public/
      - /opt/packetframe/docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /opt/packetframe/docker/caddy/log.txt:/var/log/caddy.log

  api:
    image: "ghcr.io/packetframe/api:{{ config.controlplane.versions.docker.api }}"
    depends_on:
      - api_db
    environment:
      - DB_HOST=api_db
      - METRICS_LISTEN=:8081

  orchestrator:
    image: "ghcr.io/packetframe/orchestrator:{{ config.controlplane.versions.docker.api }}"
    volumes:
      - /opt/packetframe/docker/zones/:/data
    depends_on:
      - api_db
    environment:
      - DB_HOST=api_db
      - CACHE_DIR=/data
      - METRICS_LISTEN=:8081

  api_db:
    image: "postgres:{{ config.controlplane.versions.docker.postgres }}"
    volumes:
      - /opt/packetframe/docker/api_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api

  prometheus:
    image: "prom/prometheus:v{{ config.controlplane.versions.docker.prometheus }}"
    user: root
    ports:
      - 127.0.0.1:9090:9090
    volumes:
      - /opt/packetframe/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /opt/packetframe/docker/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
